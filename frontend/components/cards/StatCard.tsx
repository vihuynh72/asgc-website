interface StatCardProps {  title: string;  value: string | number;  description?: string;  icon?: React.ReactNode;  trend?: {    value: number;    label: string;    isPositive: boolean;  };  className?: string;}export function StatCard({ title, value, description, icon, trend, className = "" }: StatCardProps) {  return (    <div className={`card p-6 text-center ${className}`}>      {icon && (        <div className="w-12 h-12 bg-[var(--asgc-primary)] bg-opacity-10 rounded-lg flex items-center justify-center text-[var(--asgc-primary)] mx-auto mb-4">          {icon}        </div>      )}            <div className="text-3xl font-bold text-[var(--color-foreground)] mb-2">        {value}      </div>            <h3 className="text-lg font-semibold text-[var(--color-foreground)] mb-2">        {title}      </h3>            {description && (        <p className="text-sm text-[var(--color-muted-foreground)] mb-3">          {description}        </p>      )}            {trend && (        <div className="flex items-center justify-center space-x-1">          <span className={`text-xs font-medium ${            trend.isPositive ? 'text-[var(--asgc-success)]' : 'text-[var(--asgc-error)]'          }`}>            {trend.isPositive ? '↗' : '↘'} {trend.value}%          </span>          <span className="text-xs text-[var(--color-muted-foreground)]">            {trend.label}          </span>        </div>      )}    </div>  );}